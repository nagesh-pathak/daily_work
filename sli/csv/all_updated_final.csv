Business Service,Feature,SLI,SLO,Active/Production,Priority,Data Source,Metric Type,SLI Type,Success Metric,Total Metric,Owners,Comments
CDC OnPrem,Disk Usage Dashboard,Disk usage percentage,< 80%,Yes,P1,Prometheus,Counter,Availability,"count((onprem_cdc_volume_used_percent{account_id=~""$account_id"", ophid=~""$ophid""} * on(ophid) group_left(service) onprem_host_service_status{service=~""cdc.*""}) < 80)","count(onprem_cdc_volume_used_percent{account_id=~""$account_id"", ophid=~""$ophid""} * on(ophid) group_left(service) onprem_host_service_status{service=~""cdc.*""})",CDC Team,Critical for system stability
,,Disk usage growth rate,< 10% increase in 3 hours,P1,Yes,Prometheus,Counter,Latency,"count(rate((onprem_cdc_volume_used_percent{account_id=~""$account_id"", ophid=~""$ophid""} * on(ophid) group_left(service) onprem_host_service_status{service=~""cdc.*""})[3h:10m]) < 0.1)","count(onprem_cdc_volume_used_percent{account_id=~""$account_id"", ophid=~""$ophid""} * on(ophid) group_left(service) onprem_host_service_status{service=~""cdc.*""})",CDC Team,Early warning for capacity issues
,CPU Usage Dashboard,CPU usage percentage,< 90%,P1,Yes,Prometheus,Counter,Availability,"count((onprem_cpu_percentage{account_id=~""$account_id"", ophid=~""$ophid""} * on(ophid) group_left(service) onprem_host_service_status{service=~""cdc.*""}) < 90)","count(onprem_cpu_percentage{account_id=~""$account_id"", ophid=~""$ophid""} * on(ophid) group_left(service) onprem_host_service_status{service=~""cdc.*""})",CDC Team,Performance threshold
,,CPU usage growth rate,< 20% increase in 1 hour,P1,Yes,Prometheus,Counter,Latency,"count(rate((onprem_cpu_percentage{account_id=~""$account_id"", ophid=~""$ophid""} * on(ophid) group_left(service) onprem_host_service_status{service=~""cdc.*""})[1h:5m]) < 0.2)","count(onprem_cpu_percentage{account_id=~""$account_id"", ophid=~""$ophid""} * on(ophid) group_left(service) onprem_host_service_status{service=~""cdc.*""})",CDC Team,Performance degradation detection
,Memory Usage Dashboard,Memory usage percentage,< 90%,P1,Yes,Prometheus,Counter,Availability,"count((onprem_host_memory_usage_used{account_id=~""$account_id"", ophid=~""$ophid""} / onprem_host_memory_usage_total{account_id=~""$account_id"", ophid=~""$ophid""} * 100 * on(ophid) group_left(service) onprem_host_service_status{service=~""cdc.*""}) < 90)","count(onprem_host_memory_usage_used{account_id=~""$account_id"", ophid=~""$ophid""} / onprem_host_memory_usage_total{account_id=~""$account_id"", ophid=~""$ophid""} * 100 * on(ophid) group_left(service) onprem_host_service_status{service=~""cdc.*""})",CDC Team,Memory pressure threshold
,,Memory usage growth rate,< 15% increase in 1 hour,P1,Yes,Prometheus,Counter,Latency,"count(rate(onprem_host_memory_usage_used{account_id=~""$account_id"", ophid=~""$ophid""}[1h]) / onprem_host_memory_usage_total{account_id=~""$account_id"", ophid=~""$ophid""} * on(ophid) group_left(service) onprem_host_service_status{service=~""cdc.*""} < 0.15)","count(onprem_host_memory_usage_used{account_id=~""$account_id"", ophid=~""$ophid""} / onprem_host_memory_usage_total{account_id=~""$account_id"", ophid=~""$ophid""} * on(ophid) group_left(service) onprem_host_service_status{service=~""cdc.*""})",CDC Team,Memory leak detection
,Host Details Dashboard,Healthy hosts,> 95%,P1,Yes,Prometheus,Counter,Availability,"count(count by(ophid) (onprem_host_service_status{account_id=~""$account_id"", ophid=~""$ophid"", service=~""cdc.*""} == 1))","count(count by(ophid) (onprem_host_service_status{account_id=~""$account_id"", ophid=~""$ophid"", service=~""cdc.*""}))",CDC Team,Infrastructure health
,,Connected hosts,> 98%,P1,Yes,Prometheus,Counter,Availability,"count(count by(ophid) (onprem_host_service_status{account_id=~""$account_id"", ophid=~""$ophid"", service=~""cdc.*""} > 0))","count(count by(ophid) (onprem_host_service_status{account_id=~""$account_id"", ophid=~""$ophid"", service=~""cdc.*""}))",CDC Team,Network connectivity
,,Hosts not in Review Details,> 90%,P2,Yes,Prometheus,Counter,Availability,"count(count by(ophid) (onprem_host_service_status{account_id=~""$account_id"", ophid=~""$ophid"", service=~""cdc.*""} != 0))","count(count by(ophid) (onprem_host_service_status{account_id=~""$account_id"", ophid=~""$ophid"", service=~""cdc.*""}))",CDC Team,Operational status
,,Hosts with adequate resources,> 80%,P2,Yes,Prometheus,Counter,Availability,"count(onprem_host_cpu_cores{account_id=~""$account_id"", ophid=~""$ophid""} > 4 and onprem_host_memory_usage_total{account_id=~""$account_id"", ophid=~""$ophid""} > 8589934592 and onprem_host_disk_total{account_id=~""$account_id"", ophid=~""$ophid""} > 137438953472 and on(ophid) onprem_host_service_status{service=~""cdc.*""})","count(count by(ophid) (onprem_host_service_status{account_id=~""$account_id"", ophid=~""$ophid"", service=~""cdc.*""}))",CDC Team,Capacity planning
,Onprem Pod Details Dashboard,Pods without CrashLoopBackOff,100%,P1,No,Prometheus,Counter,Availability,"count(kube_pod_container_status_restarts_total{namespace=""infoblox"", pod=~""cdc.*""} == 0)","count(kube_pod_container_status_restarts_total{namespace=""infoblox"", pod=~""cdc.*""})",CDC Team,Container health
,,Pods without ImagePullBackOff,100%,P1,No,Prometheus,Counter,Availability,"count(kube_pod_container_status_waiting_reason{namespace=""infoblox"", pod=~""cdc.*""} != ""ImagePullBackOff"")","count(kube_pod_container_status_waiting_reason{namespace=""infoblox"", pod=~""cdc.*""})",CDC Team,Deployment reliability
,,Pod restarts per hour,< 1 restart/hour,P1,No,Prometheus,Counter,Error Rate,"sum(rate(kube_pod_container_status_restarts_total{namespace=""infoblox"", pod=~""cdc.*""}[1h]))","count(kube_pod_container_status_restarts_total{namespace=""infoblox"", pod=~""cdc.*""})",CDC Team,Container stability
,,Container open sockets,Monitor trend,P2,No,Prometheus,Gauge,Throughput,"sum(container_sockets{namespace=""infoblox"", pod=~""cdc.*""})","count(kube_pod_info{namespace=""infoblox"", pod=~""cdc.*""})",CDC Team,Resource utilization
,,OOM events,0 events,P1,No,Prometheus,Counter,Error Rate,"sum(container_memory_failures_total{namespace=""infoblox"", pod=~""cdc.*"", type=""oom""})","count(kube_pod_info{namespace=""infoblox"", pod=~""cdc.*""})",CDC Team,Memory management
CDC Flow,Flow Details Dashboard,Flows in Online status,Monitor growth,P1,No,cdc flow db,Counter,Availability,"count(cdc_flow_status{account_id=~""$account_id"", flow_id=~""$flow_id""} == 1)","count(cdc_flow_status{account_id=~""$account_id"", flow_id=~""$flow_id""})",CDC Team,Core business metric
,,Flows not in Pending Config Push,Monitor growth,P1,No,cdc flow db,Counter,Availability,"count(cdc_flow_status{account_id=~""$account_id"", flow_id=~""$flow_id""} != 0.5)","count(cdc_flow_status{account_id=~""$account_id"", flow_id=~""$flow_id""})",CDC Team,Configuration management
,,Flows not in Review Details,Monitor growth,P2,No,cdc flow db,Counter,Availability,"count(cdc_flow_status{account_id=~""$account_id"", flow_id=~""$flow_id""} != 0)","count(cdc_flow_status{account_id=~""$account_id"", flow_id=~""$flow_id""})",CDC Team,Operational efficiency
,,Flows not Disabled,Monitor growth,P2,No,cdc flow db,Counter,Availability,"count(cdc_flow_status{account_id=~""$account_id"", flow_id=~""$flow_id""} > 0)","count(cdc_flow_status{account_id=~""$account_id"", flow_id=~""$flow_id""})",CDC Team,Service utilization
,,Flows with data activity,> 99%,P1,No,Prometheus,Counter,Availability,"count(increase(onprem_cdc_processed_events{account_id=~""$account_id"", ophid=~""$ophid""}[5m]) > 0)","count(cdc_flow_status{account_id=~""$account_id"", flow_id=~""$flow_id""} == 1)",CDC Team,Data processing health
,,Flows without data in 24h,< 1%,P2,No,Prometheus,Counter,Availability,"count(increase(onprem_cdc_processed_events{account_id=~""$account_id"", ophid=~""$ophid""}[24h]) == 0)","count(cdc_flow_status{account_id=~""$account_id"", flow_id=~""$flow_id""})",CDC Team,Data pipeline monitoring
CDC Service,CDC Service Details,Customers with CDC enabled,Monitor growth,P2,Yes,Prometheus,Gauge,Throughput,"count(count by(account_id) (onprem_host_service_status{service=~""cdc.*""}))","count(distinct(account_id) by () (prometheus_build_info))",CDC Team,Business metric
,,CDC hosts per customer,Monitor distribution,P2,Yes,Prometheus,Gauge,Throughput,"avg(count by(account_id) (onprem_host_service_status{service=~""cdc.*""}))","count(count by(account_id) (onprem_host_service_status{service=~""cdc.*""}))",CDC Team,Resource utilization
,,Service-level errors,< 10 errors/hour,P1,Yes,Prometheus,Counter,Error Rate,"sum(rate(prometheus_http_requests_total{code!~""2.*""}[1h]))","sum(rate(prometheus_http_requests_total[1h]))",CDC Team,Service health
,,Error distribution by service,Monitor per service,P2,Yes,Prometheus,Counter,Error Rate,"sum by(service) (rate(prometheus_http_requests_total{code!~""2.*""}[5m]))","sum by(service) (rate(prometheus_http_requests_total[5m]))",CDC Team,Service-specific monitoring
CDC APIs,API Performance Dashboard,API response time,< 200ms,P1,Yes,Prometheus,Histogram,Latency,"sum(rate(http_request_duration_seconds_bucket{le=""0.2""}[5m]))","sum(rate(http_request_duration_seconds_count[5m]))",CDC Team,User experience
,,API success rate,> 99.9%,P1,Yes,Prometheus,Counter,Availability,"sum(rate(http_requests_total{code!~""5.*""}[5m]))","sum(rate(http_requests_total[5m]))",CDC Team,Service reliability
,,4XX error rate,< 1%,P2,Yes,Prometheus,Counter,Error Rate,"sum(rate(http_requests_total{code=~""4.*""}[5m]))","sum(rate(http_requests_total[5m]))",CDC Team,Client integration health
,,5XX error rate,< 0.1%,P1,Yes,Prometheus,Counter,Error Rate,"sum(rate(http_requests_total{code=~""5.*""}[5m]))","sum(rate(http_requests_total[5m]))",CDC Team,Service stability
CDC Processing,Processing Insights Dashboard,Events per second,Monitor baseline,P2,No,Prometheus,Counter,Throughput,"sum(rate(onprem_cdc_processed_events{account_id=~""$account_id"", ophid=~""$ophid""}[1m]))","1",CDC Team,Processing capacity
,,Queries per second,Monitor baseline,P2,No,Prometheus,Counter,Throughput,"sum(rate(prometheus_http_requests_total[1m]))","1",CDC Team,Query performance
,,Data processed per flow,Monitor per flow,P2,No,Prometheus,Counter,Throughput,"sum by(flow_id) (rate(onprem_cdc_processed_events{account_id=~""$account_id"", ophid=~""$ophid""}[5m]))","count by(flow_id) (cdc_flow_status{account_id=~""$account_id"", flow_id=~""$flow_id""})",CDC Team,Data processing health
CDC System,CDC Service Performance Details,Goroutine count growth,< 10% increase/hour,P2,No,Prometheus,Gauge,Latency,"count(rate(go_goroutines[1h]) < 0.1 * go_goroutines offset 1h)","count(go_goroutines)",CDC Team,Concurrency management
,,Resource utilization trend,Monitor efficiency,P2,No,Prometheus,Gauge,Throughput,"avg(rate(process_cpu_seconds_total[5m])) + avg(process_resident_memory_bytes / 1024 / 1024)","1",CDC Team,Resource optimization
CDC Features,Feature Analytics Details,Customer feature usage,Monitor adoption,P3,No,Prometheus,Counter,Throughput,"count by(account_id) (onprem_cdc_received_events_from_bloxone{source=""bloxone""}) + count by(account_id) (onprem_cdc_received_events_from_nios)","count(count by(account_id) (onprem_host_service_status{service=~""cdc.*""}))",CDC Team,Product analytics
,,Service status health,100% uptime,P1,No,Prometheus,Counter,Availability,"count(up == 1)","count(up)",CDC Team,Service monitoring
CDC Capacity,Capacity Planning,Resource usage trend,< 80% capacity,P2,No,Prometheus,Gauge,Latency,"count((process_resident_memory_bytes / node_memory_MemTotal_bytes * 100) < 80)","count(process_resident_memory_bytes)",CDC Team,Capacity planning
,,System scalability,Handle 2x load,P2,No,Prometheus,Gauge,Throughput,"sum(rate(http_requests_total[5m])) / 2","sum(rate(http_requests_total[5m]))",CDC Team,Scalability planning
CDC cloud-to-cloud,Container Health Metrics,Container CPU utilization,< 60%,P1,Yes,Prometheus,Gauge,Availability,"count(rate(container_cpu_usage_seconds_total{namespace=""infoblox"", pod=~""cdc.*""}[5m]) * 100 < 60)","count(container_cpu_usage_seconds_total{namespace=""infoblox"", pod=~""cdc.*""})",CDC Team,Performance threshold with alerting
,,Container memory utilization,< 60%,P1,Yes,Prometheus,Gauge,Availability,"count((container_memory_working_set_bytes{namespace=""infoblox"", pod=~""cdc.*""} / container_spec_memory_limit_bytes{namespace=""infoblox"", pod=~""cdc.*""} * 100) < 60)","count(container_memory_working_set_bytes{namespace=""infoblox"", pod=~""cdc.*""})",CDC Team,Memory pressure threshold with alerting
,,Pod restart events,< 1 restart/hour,P1,Yes,Prometheus,Counter,Error Rate,"sum(rate(kube_pod_container_status_restarts_total{namespace=""infoblox"", pod=~""cdc.*""}[1h]))","count(kube_pod_container_status_restarts_total{namespace=""infoblox"", pod=~""cdc.*""})",CDC Team,Container stability monitoring
,,Pods in Running state,> 95%,P1,Yes,Prometheus,Counter,Availability,"count(kube_pod_status_phase{namespace=""infoblox"", pod=~""cdc.*"", phase=""Running""})","count(kube_pod_status_phase{namespace=""infoblox"", pod=~""cdc.*""})",CDC Team,Core container health
,,Failed/Pending/Unknown pods,0 pods,P1,Yes,Prometheus,Counter,Error Rate,"count(kube_pod_status_phase{namespace=""infoblox"", pod=~""cdc.*"", phase=~""Failed|Pending|Unknown""})","count(kube_pod_status_phase{namespace=""infoblox"", pod=~""cdc.*""})",CDC Team,Critical pod state monitoring
,Infrastructure Availability,StatefulSet ready replicas,100%,P1,Yes,Prometheus,Counter,Availability,"sum(kube_statefulset_status_replicas_ready{namespace=""infoblox"", statefulset=~""cdc.*""})","sum(kube_statefulset_replicas{namespace=""infoblox"", statefulset=~""cdc.*""})",CDC Team,StatefulSet deployment health
,,ConfigMap count stability,Monitor count,P2,Yes,Prometheus,Gauge,Availability,"count(kube_configmap_info{namespace=""infoblox""})","count(kube_configmap_info{namespace=""infoblox""})",CDC Team,Configuration management
,Network Performance,Network receive bandwidth,Monitor baseline,P2,Yes,Prometheus,Counter,Throughput,"sum(rate(container_network_receive_bytes_total{namespace=""infoblox"", pod=~""cdc.*""}[5m]))","1",CDC Team,Inbound network performance
,,Network transmit bandwidth,Monitor baseline,P2,Yes,Prometheus,Counter,Throughput,"sum(rate(container_network_transmit_bytes_total{namespace=""infoblox"", pod=~""cdc.*""}[5m]))","1",CDC Team,Outbound network performance
,Monitoring Effectiveness,Pod failure alert detection,< 30 seconds,P1,Yes,Prometheus,Histogram,Latency,"count(ALERTS{alertname=~""PodFailure.*"", alertstate=""firing""} < 30)","count(ALERTS{alertname=~""PodFailure.*""})",CDC Team,Incident detection speed
,,False positive alert rate,< 5%,P2,Yes,Prometheus,Counter,Error Rate,"count(ALERTS{alertstate=""resolved""} and ALERTS_FOR_STATE < 300)","count(ALERTS)",CDC Team,Alert system reliability
,Operational Stability,Container resource adequacy,> 80% availability,P2,Yes,Prometheus,Gauge,Availability,"count((container_memory_working_set_bytes{namespace=""infoblox"", pod=~""cdc.*""} / container_spec_memory_limit_bytes{namespace=""infoblox"", pod=~""cdc.*""} < 0.8) and (rate(container_cpu_usage_seconds_total{namespace=""infoblox"", pod=~""cdc.*""}[5m]) < 0.8))","count(container_memory_working_set_bytes{namespace=""infoblox"", pod=~""cdc.*""})",CDC Team,Capacity planning
,,Configuration consistency,100% compliance,P2,Yes,Prometheus,Counter,Availability,"count(kube_pod_info{namespace=""infoblox"", pod=~""cdc.*""}) == count(kube_configmap_info{namespace=""infoblox""})","count(kube_pod_info{namespace=""infoblox"", pod=~""cdc.*""})",CDC Team,Deployment reliability
,Security Metrics,Secure container operations,100% compliance,P2,Yes,Prometheus,Counter,Availability,"count(kube_pod_container_status_running{namespace=""infoblox"", pod=~""cdc.*""} and on(pod) kube_pod_spec_containers_security_context_run_as_non_root{namespace=""infoblox""})","count(kube_pod_container_status_running{namespace=""infoblox"", pod=~""cdc.*""})",CDC Team,Security posture monitoring
